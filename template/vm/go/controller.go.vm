// ============================================================================
// This is auto-generated by gen tool only once. Fill this file as you wish.
// ${.functionName}Controller层
// @author ${.author}
// @date ${.datetime}
// ============================================================================

package admin

import (
    "context"
    "${.packageName}/internal/modules/${.moduleName}/api/v1/admin"
    "${.packageName}/internal/modules/${.moduleName}/model"
    "${.packageName}/internal/modules/${.moduleName}/service"
)

// ${.ClassName} ${.functionName}管理
var ${.ClassName} = c${.ClassName}{}

type c${.ClassName} struct{}

// List 查询${.functionName}列表
func (c *c${.ClassName}) List(ctx context.Context, req *admin.${.ClassName}ListReq) (res *admin.${.ClassName}ListRes, err error) {
    out, err := service.${.ClassName}().SelectList(ctx, &model.${.ClassName}ListInput{
    ${- range $index, $column := .columns}
    ${- if eq $column.IsQuery "1"}
        ${$column.GoField}: req.${$column.GoField -},
    ${- end}
    ${- end}
    })
    if err != nil {
        return
    }
	res = &admin.${.ClassName}ListRes{
        List:  out.List,
        Total: out.Total,
	}
	return
}

// GetInfo 获取${.functionName}详细信息
func (c *c${.ClassName}) GetInfo(ctx context.Context, req *admin.${.ClassName}GetInfoReq) (res *admin.${.ClassName}GetInfoRes, err error) {
    out, err := service.${.ClassName}().SelectById(ctx, req.${.pkColumn.GoField})
    if err != nil {
        return
    }
    res = (*admin.${.ClassName}GetInfoRes)(out)
    return
}

// Add 新增${.functionName}
func (c *c${.ClassName}) Add(ctx context.Context, req *admin.${.ClassName}AddReq) (res *admin.${.ClassName}AddRes, err error) {
    in := &model.${.ClassName}AddInput{
    ${- range $index, $column := .columns}
    ${- if eq $column.IsInsert "1"}
    ${- $comment:=$column.ColumnComment | comment}
        ${$column.GoField}: req.${$column.GoField -},
    ${- end}
    ${- end}
        CreateBy: commonService.BizCtx().GetUserName(ctx),
    }
    err = service.${.ClassName}().Insert(ctx, in)
    return
}

// Edit 修改${.functionName}
func (c *c${.ClassName}) Edit(ctx context.Context, req *admin.${.ClassName}EditReq) (res *admin.${.ClassName}EditRes, err error) {
    in := &model.${.ClassName}EditInput{
        ${.pkColumn.GoField}: req.${.pkColumn.GoField},
    ${- range $index, $column := .columns}
    ${- if eq $column.IsEdit "1"}
    ${- $comment:=$column.ColumnComment | comment}
        ${$column.GoField}: req.${$column.GoField -},
    ${- end}
    ${- end}
        UpdateBy: commonService.BizCtx().GetUserName(ctx),
    }
    err = service.${.ClassName}().Update(ctx, in)
    return
}

// Delete 删除${.functionName}
func (c *c${.ClassName}) Delete(ctx context.Context, req *admin.${.ClassName}DeleteReq) (res *admin.${.ClassName}DeleteRes, err error) {
    err = service.${.ClassName}().DeleteByIds(ctx, req.${.pkColumn.GoField}s)
    return
}
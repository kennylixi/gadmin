// ================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// You can delete these comments if you wish manually maintain this interface file.
// ================================================================================

package service

import (
    "context"
    "${.packageName}/internal/modules/${.moduleName}/model"
    "${.packageName}/internal/modules/${.moduleName}/model/entity"
)

type (
    I${.ClassName} interface {
        SelectById(ctx context.Context, ${.pkColumn.GoField|uncapitalize} ${.pkColumn.GoType}) (*entity.${.ClassName}, error)
        SelectList(ctx context.Context, in *model.${.ClassName}ListInput) (out *model.${.ClassName}ListOutput, err error)
        Insert(ctx context.Context, in *model.${.ClassName}AddInput) error
        Update(ctx context.Context, in *model.${.ClassName}EditInput) error
        DeleteByIds(ctx context.Context, ${.pkColumn.GoField|uncapitalize}s []${.pkColumn.GoType}) error
    }
)

var (
    local${.ClassName} I${.ClassName}
)

func ${.ClassName}() I${.ClassName} {
    if local${.ClassName} == nil {
        panic("implement not found for interface I${.ClassName}, forgot register?")
    }
    return local${.ClassName}
}

func Register${.ClassName}(i I${.ClassName}) {
    local${.ClassName} = i
}
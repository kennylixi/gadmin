// ================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// You can delete these comments if you wish manually maintain this interface file.
// ================================================================================

package service

import (
	"context"
	"github.com/kennylixi/gadmin/internal/modules/system/model"
	"github.com/kennylixi/gadmin/internal/modules/system/model/entity"
)

type (
	IDictData interface {
		List(ctx context.Context, in *model.DictDataListInput) (out *model.DictDataListOutput, err error)
		All(ctx context.Context, status string) (list []*entity.DictData, err error)
		GetByDictType(ctx context.Context, dictType string) (items []*entity.DictData, err error)
		CountDictDataByType(ctx context.Context, dictType string) (int, error)
		GetInfo(ctx context.Context, dictCode int64) (*entity.DictData, error)
		Add(ctx context.Context, in *model.DictDataAddInput) error
		Edit(ctx context.Context, in *model.DictDataEditInput) error
		Delete(ctx context.Context, dictCodes []int64) error
	}
)

var (
	localDictData IDictData
)

func DictData() IDictData {
	if localDictData == nil {
		panic("implement not found for interface IDictData, forgot register?")
	}
	return localDictData
}

func RegisterDictData(i IDictData) {
	localDictData = i
}

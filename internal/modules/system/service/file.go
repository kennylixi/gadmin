// ================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// You can delete these comments if you wish manually maintain this interface file.
// ================================================================================

package service

import (
	"context"
	"github.com/kennylixi/gadmin/internal/modules/system/model"
	"github.com/kennylixi/gadmin/internal/modules/system/model/entity"

	"github.com/gogf/gf/v2/net/ghttp"
)

type (
	IFile interface {
		LoadDrivers(ctx context.Context) error
		SetMasterDriver(ctx context.Context, driverId ...int64) (err error)
		SelectById(ctx context.Context, id int64) (sysFile *entity.File, err error)
		SelectList(ctx context.Context, in *model.FileListInput) (out *model.FileListOutput, err error)
		Insert(ctx context.Context, in *model.FileAddInput) (err error)
		DeleteByIds(ctx context.Context, ids []int64) (err error)
		GetExtension(prefix string) string
		GetFileExt(file *ghttp.UploadFile) string
		CheckAllowDownload(ctx context.Context, resource string) (bool, error)
		SetAttachmentResponseHeader(ctx context.Context, realFileName string)
		Upload(ctx context.Context, in *model.FileUploadInput) (out *model.FileUploadOutput, err error)
		GetUploadMaxSize(ctx context.Context) (int64, error)
		GetUploadMaxFileNameLen(ctx context.Context) (int64, error)
		GetUploadAllowedExt(ctx context.Context) ([]string, error)
		GetTempFileDir(ctx context.Context) (string, error)
		SaveByBytes(ctx context.Context, in *model.FileSaveByBytesInput) (out *model.FileSaveByBytesOutput, err error)
	}
)

var (
	localFile IFile
)

func File() IFile {
	if localFile == nil {
		panic("implement not found for interface IFile, forgot register?")
	}
	return localFile
}

func RegisterFile(i IFile) {
	localFile = i
}

// ================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// You can delete these comments if you wish manually maintain this interface file.
// ================================================================================

package service

import (
	"context"
	"github.com/kennylixi/gadmin/internal/modules/system/model"
	"github.com/kennylixi/gadmin/internal/modules/system/model/entity"
)

type (
	IUser interface {
		SelectUserList(ctx context.Context, in *model.UserListInput) (out *model.UserListOutput, err error)
		Search(ctx context.Context, in *model.UserSearchInput) (out model.UserSearchOutput, err error)
		ImportUser(ctx context.Context, in *model.UserImportUserInput) (out *model.UserImportUserOutput, err error)
		SelectUserByUserName(ctx context.Context, userName string) (*entity.User, error)
		SelectUserByUserNameAndPwd(ctx context.Context, userName, pwd string) (*entity.User, error)
		SelectUserById(ctx context.Context, userId int64) (*entity.User, error)
		SelectUserDetailById(ctx context.Context, userId int64) (*model.User, error)
		SelectUserDetailByUserName(ctx context.Context, userName string) (*model.User, error)
		SelectUserRoleGroup(ctx context.Context, userName string) (string, error)
		SelectUserPostGroup(ctx context.Context, userName string) (string, error)
		CheckUserNameUnique(ctx context.Context, userName string) (bool, error)
		CheckPhoneUnique(ctx context.Context, phone string, userId ...int64) (bool, error)
		CheckEmailUnique(ctx context.Context, email string, userId ...int64) (bool, error)
		CheckUserAllowed(userId int64) error
		Add(ctx context.Context, in *model.UserAddInput) error
		UpdateLoginInfo(ctx context.Context, user *model.UserUpdateLoginInfoInput) error
		Edit(ctx context.Context, in *model.UserEditInput) error
		DeleteByIds(ctx context.Context, userIds []int64) error
		UpdateStatus(ctx context.Context, in *model.UserUpdateStatusInput) error
		UpdateProfile(ctx context.Context, in *model.UserUpdateProfileInput) error
		UpdateUserAvatar(ctx context.Context, in *model.UserUpdateAvatarInput) error
		ResetPwd(ctx context.Context, in *model.UserResetPwdInput) error
		ResetUserPwd(ctx context.Context, in *model.UserResetUserPwdInput) error
		UpdatePwd(ctx context.Context, in *model.UserUpdatePwdInput) error
		InsertUserRole(ctx context.Context, userId int64, roleIds []int64) error
		CheckUserDataScope(ctx context.Context, userId int64) error
		SelectAllocatedList(ctx context.Context, in *model.UserSelectAllocatedListInput) (out *model.UserSelectAllocatedListOutput, err error)
		SelectUnallocatedList(ctx context.Context, in *model.UserSelectUnallocatedListInput) (out *model.UserSelectUnallocatedListOutput, err error)
	}
)

var (
	localUser IUser
)

func User() IUser {
	if localUser == nil {
		panic("implement not found for interface IUser, forgot register?")
	}
	return localUser
}

func RegisterUser(i IUser) {
	localUser = i
}

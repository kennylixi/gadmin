// ================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// You can delete these comments if you wish manually maintain this interface file.
// ================================================================================

package service

import (
	"context"
	"github.com/kennylixi/gadmin/internal/modules/system/model"
	entity2 "github.com/kennylixi/gadmin/internal/modules/system/model/entity"
)

type (
	IGenTable interface {
		InitGenConfig(ctx context.Context) error
		SelectGenTableById(ctx context.Context, id int64) (genTable *model.GenTableItem, err error)
		SelectGenTableByName(ctx context.Context, tableName string) (genTable *model.GenTableItem, err error)
		SelectGenTableList(ctx context.Context, in *model.GenTableListInput) (out *model.GenTableListOutput, err error)
		SelectDbTableList(ctx context.Context, in *model.GenTableDataListInput) (*model.GenTableDbTableOutput, error)
		SelectDbTableListByNames(ctx context.Context, tableNames []string) ([]*entity2.GenTable, error)
		SelectGenTableAll(ctx context.Context) ([]*model.GenTableItem, error)
		UpdateGenTable(ctx context.Context, in *model.GenTableUpdateInput) error
		DeleteGenTableByIds(ctx context.Context, tableIds []int64) error
		ImportGenTable(ctx context.Context, tableList []*entity2.GenTable, operName string) error
		SynchDb(ctx context.Context, tableName string) error
		ValidateEdit(in *model.GenTableUpdateInput) (err error)
		PreviewCode(ctx context.Context, tableId int64) (dataMap map[string]string, err error)
		DownloadCode(ctx context.Context, tableNames []string) (genDir string, err error)
		GeneratorCode(ctx context.Context, tableName string) (err error)
	}
)

var (
	localGenTable IGenTable
)

func GenTable() IGenTable {
	if localGenTable == nil {
		panic("implement not found for interface IGenTable, forgot register?")
	}
	return localGenTable
}

func RegisterGenTable(i IGenTable) {
	localGenTable = i
}

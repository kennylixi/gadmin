// ============================================================================
// This is auto-generated by gen tool only once. Fill this file as you wish.
// 渠道管理Controller层
// @author kennylixi
// @date 2023-03-27 08:32:42
// ============================================================================

package admin

import (
	"context"
	commonService "github.com/kennylixi/gadmin/internal/modules/common/service"
	"github.com/kennylixi/gadmin/internal/modules/system/api/v1/admin"
	"github.com/kennylixi/gadmin/internal/modules/system/model"
	sysService "github.com/kennylixi/gadmin/internal/modules/system/service"
)

// PushChannel 渠道管理管理
var PushChannel = cPushChannel{}

type cPushChannel struct{}

// List 查询渠道管理列表
func (c *cPushChannel) List(ctx context.Context, req *admin.PushChannelListReq) (res *admin.PushChannelListRes, err error) {
	out, err := sysService.PushChannel().SelectList(ctx, &model.PushChannelListInput{
		Name:   req.Name,
		TypeId: req.TypeId,
		Status: req.Status,
	})
	if err != nil {
		return
	}
	res = &admin.PushChannelListRes{
		List:  out.List,
		Total: out.Total,
	}
	return
}

// SimpleList 查询渠道管理列表
func (c *cPushChannel) SimpleList(ctx context.Context, req *admin.PushChannelSimpleListReq) (res admin.PushChannelSimpleListRes, err error) {
	out, err := sysService.PushChannel().SelectSimpleList(ctx, &model.PushChannelSimpleListInput{
		Name:   req.Name,
		TypeId: req.TypeId,
		Status: req.Status,
	})
	if err != nil {
		return
	}
	res = admin.PushChannelSimpleListRes(out)
	return
}

// GetInfo 获取渠道管理详细信息
func (c *cPushChannel) GetInfo(ctx context.Context, req *admin.PushChannelGetInfoReq) (res *admin.PushChannelGetInfoRes, err error) {
	out, err := sysService.PushChannel().SelectById(ctx, req.Id)
	if err != nil {
		return
	}
	res = (*admin.PushChannelGetInfoRes)(out)
	return
}

// GetTemplateParamsById 根据渠道ID获取模板参数
func (c *cPushChannel) GetTemplateParamsById(ctx context.Context, req *admin.PushChannelGetTemplateParamsReq) (res admin.PushChannelGetTemplateParamsRes, err error) {
	params, err := sysService.PushChannel().GetTemplateParamsById(ctx, req.Id)
	if err != nil {
		return
	}
	res = admin.PushChannelGetTemplateParamsRes(params)
	return
}

// Add 新增渠道管理
func (c *cPushChannel) Add(ctx context.Context, req *admin.PushChannelAddReq) (res *admin.PushChannelAddRes, err error) {
	in := &model.PushChannelAddInput{
		Name:     req.Name,
		TypeId:   req.TypeId,
		Remark:   req.Remark,
		Config:   req.Config,
		Status:   req.Status,
		CreateBy: commonService.BizCtx().GetUserName(ctx),
	}
	err = sysService.PushChannel().Insert(ctx, in)
	return
}

// Edit 修改渠道管理
func (c *cPushChannel) Edit(ctx context.Context, req *admin.PushChannelEditReq) (res *admin.PushChannelEditRes, err error) {
	in := &model.PushChannelEditInput{
		Id:       req.Id,
		Name:     req.Name,
		TypeId:   req.TypeId,
		Remark:   req.Remark,
		Config:   req.Config,
		Status:   req.Status,
		UpdateBy: commonService.BizCtx().GetUserName(ctx),
	}
	err = sysService.PushChannel().Update(ctx, in)
	return
}

// Delete 删除渠道管理
func (c *cPushChannel) Delete(ctx context.Context, req *admin.PushChannelDeleteReq) (res *admin.PushChannelDeleteRes, err error) {
	err = sysService.PushChannel().DeleteByIds(ctx, req.Ids)
	return
}

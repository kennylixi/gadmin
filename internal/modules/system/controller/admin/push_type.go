// ============================================================================
// This is auto-generated by gen tool only once. Fill this file as you wish.
// 渠道类型管理Controller层
// @author kennylixi
// @date 2023-02-22 10:47:28
// ============================================================================

package admin

import (
	"context"
	"github.com/kennylixi/gadmin/internal/consts"
	commonService "github.com/kennylixi/gadmin/internal/modules/common/service"
	"github.com/kennylixi/gadmin/internal/modules/system/api/v1/admin"
	"github.com/kennylixi/gadmin/internal/modules/system/model"
	sysService "github.com/kennylixi/gadmin/internal/modules/system/service"
)

// PushType 渠道类型管理管理
var PushType = cPushType{}

type cPushType struct{}

// List 获取所有渠道类型
func (c *cPushType) List(ctx context.Context, req *admin.PushTypeListReq) (res admin.PushTypeListRes, err error) {
	res, err = sysService.PushType().GetList(ctx, &model.PushTypeListInput{
		Name:     req.Name,
		ParentId: req.ParentId,
		Status:   req.Status,
	})
	if err != nil {
		return
	}
	if res == nil {
		res = admin.PushTypeListRes{}
	}
	return
}

// ListByParentId 查询指定渠道类型的下级列表
func (c *cPushType) ListByParentId(ctx context.Context, req *admin.PushTypeListByParentIdReq) (res admin.PushTypeListByParentIdRes, err error) {
	res, err = sysService.PushType().GetList(ctx, &model.PushTypeListInput{
		ParentId: req.ParentId,
		Status:   consts.Normal,
	})
	if err != nil {
		return
	}
	if res == nil {
		res = admin.PushTypeListByParentIdRes{}
	}
	return
}

// GetInfo 获取行政渠道类型的详细信息
func (c *cPushType) GetInfo(ctx context.Context, req *admin.PushTypeGetInfoReq) (res *admin.PushTypeGetInfoRes, err error) {
	data, err := sysService.PushType().GetById(ctx, req.Id)
	if err != nil {
		return
	}
	res = (*admin.PushTypeGetInfoRes)(data)
	return
}

// Add 新增定行政渠道类型
func (c *cPushType) Add(ctx context.Context, req *admin.PushTypeAddReq) (res *admin.PushTypeAddRes, err error) {
	in := &model.PushTypeAddInput{
		ParentId:       req.ParentId,
		Name:           req.Name,
		Code:           req.Code,
		Status:         req.Status,
		Sort:           req.Sort,
		Config:         req.Config,
		TemplateParams: req.TemplateParams,
		CreateBy:       commonService.BizCtx().GetUserName(ctx),
	}
	err = sysService.PushType().Insert(ctx, in)
	return
}

// Edit 修改定时任务调度表
func (c *cPushType) Edit(ctx context.Context, req *admin.PushTypeEditReq) (res *admin.PushTypeEditRes, err error) {
	in := &model.PushTypeEditInput{
		Id:             req.Id,
		ParentId:       req.ParentId,
		Name:           req.Name,
		Code:           req.Code,
		Status:         req.Status,
		Sort:           req.Sort,
		Config:         req.Config,
		TemplateParams: req.TemplateParams,
		UpdateBy:       commonService.BizCtx().GetUserName(ctx),
	}
	err = sysService.PushType().Update(ctx, in)
	return
}

// Delete 删除行政渠道类型
func (c *cPushType) Delete(ctx context.Context, req *admin.PushTypeDeleteReq) (res *admin.PushTypeDeleteRes, err error) {
	err = sysService.PushType().Delete(ctx, req.Id)
	return
}

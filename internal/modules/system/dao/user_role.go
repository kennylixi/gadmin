// =================================================================================
// This is auto-generated by GoFrame CLI tool only once. Fill this file as you wish.
// =================================================================================

package dao

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/kennylixi/gadmin/internal/modules/system/dao/internal"
)

// internalUserRoleDao is internal type for wrapping internal DAO implements.
type internalUserRoleDao = *internal.UserRoleDao

// userRoleDao is the data access object for table sys_user_role.
// You can define custom methods on it to extend its functionality as you wish.
type userRoleDao struct {
	internalUserRoleDao
}

var (
	// UserRole is globally public accessible object for table sys_user_role operations.
	UserRole = userRoleDao{
		internal.NewUserRoleDao(),
	}
)

// Fill with you ideas below.

func (d *userRoleDao) DeleteUserRoleByUserId(ctx context.Context, userId int64, tx gdb.TX) error {
	_, err := UserRole.Ctx(ctx).TX(tx).Where(UserRole.Columns().UserId, userId).Delete()
	return err
}

func (d *userRoleDao) DeleteUserRoleByUserIds(ctx context.Context, userIds []int64, tx gdb.TX) error {
	_, err := UserRole.Ctx(ctx).TX(tx).Where(UserRole.Columns().UserId, userIds).Delete()
	return err
}

func (d *userRoleDao) DeleteUserRoleInfos(ctx context.Context, roleId int64, userIds []int64) error {
	_, err := UserRole.Ctx(ctx).
		Where(UserRole.Columns().RoleId, roleId).
		Where(UserRole.Columns().UserId, userIds).
		Delete()
	return err
}

func (d *userRoleDao) DeleteUserRoleInfo(ctx context.Context, roleId int64, userId int64) error {
	_, err := UserRole.Ctx(ctx).
		Where(UserRole.Columns().RoleId, roleId).
		Where(UserRole.Columns().UserId, userId).
		Delete()
	return err
}

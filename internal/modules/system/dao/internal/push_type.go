// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// PushTypeDao is the data access object for table sys_push_type.
type PushTypeDao struct {
	table   string          // table is the underlying table name of the DAO.
	group   string          // group is the database configuration group name of current DAO.
	columns PushTypeColumns // columns contains all the column names of Table for convenient usage.
}

// PushTypeColumns defines and stores column names for table sys_push_type.
type PushTypeColumns struct {
	Id             string //
	ParentId       string // 上级编号
	Ancestors      string // 祖级列表
	Name           string // 类型名称
	Code           string // 类型编码
	Status         string // 状态（0开启 1禁用）
	Sort           string // 排序
	Config         string // 配置范例
	TemplateParams string // 模板参数
	CreateBy       string // 创建者
	CreatedAt      string // 创建时间
	UpdateBy       string // 更新者
	UpdatedAt      string // 更新时间
}

// pushTypeColumns holds the columns for table sys_push_type.
var pushTypeColumns = PushTypeColumns{
	Id:             "id",
	ParentId:       "parent_id",
	Ancestors:      "ancestors",
	Name:           "name",
	Code:           "code",
	Status:         "status",
	Sort:           "sort",
	Config:         "config",
	TemplateParams: "template_params",
	CreateBy:       "create_by",
	CreatedAt:      "created_at",
	UpdateBy:       "update_by",
	UpdatedAt:      "updated_at",
}

// NewPushTypeDao creates and returns a new DAO object for table data access.
func NewPushTypeDao() *PushTypeDao {
	return &PushTypeDao{
		group:   "default",
		table:   "sys_push_type",
		columns: pushTypeColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *PushTypeDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *PushTypeDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *PushTypeDao) Columns() PushTypeColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *PushTypeDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *PushTypeDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *PushTypeDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}

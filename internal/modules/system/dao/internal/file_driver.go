// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// FileDriverDao is the data access object for table sys_file_driver.
type FileDriverDao struct {
	table   string            // table is the underlying table name of the DAO.
	group   string            // group is the database configuration group name of current DAO.
	columns FileDriverColumns // columns contains all the column names of Table for convenient usage.
}

// FileDriverColumns defines and stores column names for table sys_file_driver.
type FileDriverColumns struct {
	Id        string // 编号
	Name      string // 配置名
	Driver    string // 存储器
	Remark    string // 备注
	Master    string // 是否为主配置
	Config    string // 存储配置
	CreateBy  string // 创建者
	CreatedAt string // 创建时间
	UpdateBy  string // 更新者
	UpdatedAt string // 更新时间
	DeletedAt string // 删除时间
}

// fileDriverColumns holds the columns for table sys_file_driver.
var fileDriverColumns = FileDriverColumns{
	Id:        "id",
	Name:      "name",
	Driver:    "driver",
	Remark:    "remark",
	Master:    "master",
	Config:    "config",
	CreateBy:  "create_by",
	CreatedAt: "created_at",
	UpdateBy:  "update_by",
	UpdatedAt: "updated_at",
	DeletedAt: "deleted_at",
}

// NewFileDriverDao creates and returns a new DAO object for table data access.
func NewFileDriverDao() *FileDriverDao {
	return &FileDriverDao{
		group:   "default",
		table:   "sys_file_driver",
		columns: fileDriverColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *FileDriverDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *FileDriverDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *FileDriverDao) Columns() FileDriverColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *FileDriverDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *FileDriverDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *FileDriverDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
